{"version":3,"sources":["history.js","public/vinyl.svg","public/play.svg","public/pause.svg","public/trash.svg","components/Room.js","components/NotValidRoom.js","components/ProtectedComponent.js","App.js","index.js"],"names":["createBrowserHistory","Room","props","socket","socketIOClient","useState","roomURL","setRoomURL","roomId","setRoomId","grid","setGrid","audioNamesInitComplete","setAudioNamesInitComplete","audioInitComplete","setAudioInitComplete","gridInitComplete","setGridInitComplete","initComplete","setInitComplete","bpm","setBPM","audioSamples","setAudioSamples","audioSampleNames","setAudioSampleNames","toggleAudioIcon","setToggleAudioIcon","currentStepRef","useRef","bpmRef","timerRef","initializeRoom","a","console","log","fetch","response","json","gridArr","audioArr","audioNameArr","roomData","tracks","map","track","push","stepArray","audioURL","Audio","audioName","current","currentURL","window","location","protocol","host","pathname","search","error","bpmChange","e","newBpm","method","headers","body","JSON","stringify","gridBoxClicked","trackNum","index","tempGrid","toggleSampleIcon","tempArr","loadSample","fileList","target","files","formData","FormData","append","name","type","mode","responseData","updated","tempArr2","tempArr3","downloadURL","useEffect","on","disconnect","clearTimeout","timer","setInterval","clearHighlight","highlightBoxes","playSounds","divsToRemoveHighlight","document","getElementsByClassName","length","classList","remove","divsToHighlight","i","add","currentTime","play","emit","className","id","onClick","history","setDisplayRooms","src","play_svg","alt","pause_svg","trash_svg","min","max","value","onChange","vinyl_svg","accept","box","join","uniqid","navigator","clipboard","writeText","div","querySelector","textContent","setTimeout","NotValidRoom","ProtectedComponent","isValid","setIsValid","checkIfValidRoom","match","params","result","checkIfValid","App","displayRooms","roomList","setRoomList","createPublicRoom","createPrivateRoom","rooms","exact","path","room","render","redirect","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f830a078.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\nexport default createBrowserHistory();","export default __webpack_public_path__ + \"static/media/vinyl.4eb661fa.svg\";","export default __webpack_public_path__ + \"static/media/play.43b34e85.svg\";","export default __webpack_public_path__ + \"static/media/pause.a4c7de09.svg\";","export default __webpack_public_path__ + \"static/media/trash.8edb7a59.svg\";","import '../App.css';\nimport {useState,useEffect, useRef} from \"react\";\nimport history from '../history.js';\nimport uniqid from \"uniqid\";\n\nimport vinyl_svg from '../public/vinyl.svg';\nimport play_svg from '../public/play.svg';\nimport pause_svg from '../public/pause.svg';\nimport trash_svg from '../public/trash.svg';\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:3000\";\n\n\nfunction Room(props) {\n\n  const socket = socketIOClient(ENDPOINT);\n  const [roomURL,setRoomURL] = useState(null);\n  const [roomId,setRoomId] = useState(null);\n  //const [currentStep,setCurrentStep] = useState(1);\n  const [grid,setGrid] = useState(null);\n  \n  const [audioNamesInitComplete, setAudioNamesInitComplete] = useState(false);\n  const [audioInitComplete, setAudioInitComplete] = useState(false);\n  const [gridInitComplete, setGridInitComplete] = useState(false);\n  const [initComplete, setInitComplete] = useState(false);\n  \n  const [bpm,setBPM] = useState(null);\n  const [triggerAudioObj, setTriggerAudioObj] = useState({});\n  const [audioSamples, setAudioSamples] = useState(null);\n  const [audioSampleNames, setAudioSampleNames] = useState(null);\n  \n  const [toggleAudioIcon, setToggleAudioIcon] = useState([true,true,true,true,true,true]);\n\n  const currentStepRef = useRef(1); \n  const bpmRef = useRef(null);\n  const timerRef = useRef(null);\n\n  const initializeRoom = async () => {\n    \n    try {\n        console.log(roomId);\n        let response = await fetch('http://localhost:8080/initialize-room/'+roomId);\n        response = await response.json();\n\n        let gridArr = [];\n        let audioArr = [];\n        let audioNameArr = [];\n\n\n        if(response.roomData[0].roomData !== null)\n        {\n          response.roomData[0].roomData.tracks.map(track=>{\n            \n            gridArr.push(track.stepArray);\n            \n            if(track.audioURL !== null) \n            {\n              audioArr.push(new Audio(track.audioURL));\n            }\n            else\n            {\n              audioArr.push(null);\n            }\n            audioNameArr.push(track.audioName);\n            return true;\n          });\n\n          setGrid(gridArr);\n          bpmRef.current = response.roomData[0].roomData.bpm;      \n          setAudioSamples(audioArr);\n          setAudioSampleNames(audioNameArr);\n\n          let currentURL = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n          setRoomURL(currentURL);\n\n\n        }   \n\n    }\n    catch(e){\n      console.error(e);\n    }\n\n  };\n\n  const bpmChange = async (e,newBpm) => {\n  \n    if(newBpm >= 40 && newBpm <= 208)\n    {\n      setBPM(newBpm);\n\n      try {\n        let response = await fetch('http://localhost:8080/update-bpm-settings/',{\n          method: 'POST',\n          headers:{\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify({\n            roomId:roomId,\n            bpm: newBpm,\n          })\n        });\n\n        const responseData = await response.json();\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  const gridBoxClicked = async (trackNum,index) => {\n\n    let tempGrid = [...grid];\n    tempGrid[trackNum][index] = !tempGrid[trackNum][index];\n    setGrid(tempGrid);\n\n    try {\n      let response = await fetch('http://localhost:8080/update-room-settings/',{\n        method: 'POST',\n        headers:{\n          'Content-Type':'application/json'\n        },\n        body: JSON.stringify({\n          roomId:roomId,\n          gridArr: tempGrid,\n          trackNum: trackNum,\n        })\n      });\n\n      const responseData = await response.json();\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const toggleSampleIcon = async (trackNum) => {\n\n    let tempArr = [...toggleAudioIcon];\n    tempArr[trackNum] = !tempArr[trackNum];\n\n    setToggleAudioIcon(tempArr);\n\n  };\n\n  const loadSample = async (e,trackNum) => {\n\n    const fileList = e.target.files;\n\n    const formData = new FormData();\n    formData.append('roomId',roomId);\n    formData.append('instrumentNum',trackNum);\n    formData.append('fileName',fileList[0].name);\n    formData.append('contentType',fileList[0].type);\n\n    formData.append('audioFile',fileList[0]);\n    \n\n    try {\n      let response = await fetch('http://localhost:8080/update-audio-settings/',\n      {\n        method: 'POST',\n        mode:'cors',\n        headers:{\n          'Accept':'application/json',\n          'Origin':'http://localhost:3000/room/1gtirs1ziaky0hpww2',\n\n        },\n        body: formData,\n      });\n\n      const responseData = await response.json();\n    \n      if(responseData.updated)\n      {\n        let tempArr = [...toggleAudioIcon];\n        tempArr[trackNum] = !tempArr[trackNum];\n        setToggleAudioIcon(tempArr);\n\n        let tempArr2 = [...audioSampleNames];\n        tempArr2[trackNum] = fileList[0].name;\n        setAudioSampleNames(tempArr2);\n\n        let tempArr3 = [...audioSamples];\n        tempArr3[trackNum] = new Audio(responseData.downloadURL);\n        setAudioSamples(tempArr3);\n      }\n\n    } catch (e) {\n      console.error(e);\n    }\n\n\n  };\n\n  const copyText = () => {\n    navigator.clipboard.writeText(roomURL);\n    let div = document.querySelector('#copy-link-text');\n    div.textContent = \"Link copied!\";\n\n    setTimeout(()=>{\n      div.textContent = \"Copy link\";\n    },2000)\n  };\n\n  useEffect(() => {\n    \n    socket.on('user-connected', () => {\n      console.log('a user connected');\n    });\n\n    socket.on('user-disconnected', name => {\n      console.log('user disconnected:'+name);\n    });\n    \n\n\n\n    setRoomId(props.roomId);\n\n\n  return () => {\n    socket.disconnect();\n  };\n    \n  },[]);\n\n  useEffect(() => {\n  \n    if(roomId !== null)\n    {\n      initializeRoom();\n\n    }\n    \n  },[roomId]);\n\n\n  useEffect(() => {\n    \n\n    if(bpm !== null)\n    {\n      if(bpm >= 40 && bpm <= 208)\n      {\n        bpmRef.current = bpm;\n      }\n\n      if(timerRef.current !== null)\n      {\n        clearTimeout(timerRef.current);\n      }\n\n      let timer = setInterval(() => {\n\n        clearHighlight();\n        highlightBoxes();\n        playSounds();\n\n        if(currentStepRef.current + 1 === 33)\n        {\n          currentStepRef.current = 1;\n        }\n        else\n        {\n          currentStepRef.current += 1;\n        }\n      },(60/bpmRef.current)*1000);\n\n      timerRef.current = timer;\n\n\n      const clearHighlight = () => {\n        const divsToRemoveHighlight = document.getElementsByClassName('highlighted');\n\n        while(divsToRemoveHighlight.length)\n        {\n          divsToRemoveHighlight[0].classList.remove('highlighted');\n        }\n      };\n\n      const highlightBoxes = () => {\n\n        const divsToHighlight = document.getElementsByClassName('step-'+currentStepRef.current);\n        \n        for(let i=0;i<divsToHighlight.length;i++)\n        {\n          divsToHighlight[i].classList.add('highlighted');\n        }\n      };\n\n      const playSounds = () => {\n        \n        if(grid[0][currentStepRef.current-1] && audioSamples[0] !== null)\n        {\n          audioSamples[0].currentTime = 0;\n          audioSamples[0].play();\n        }\n\n        if(grid[1][currentStepRef.current-1] && audioSamples[1] !== null)\n        {\n          audioSamples[1].currentTime = 0;\n          audioSamples[1].play();\n        }\n\n        if(grid[2][currentStepRef.current-1] && audioSamples[2]!== null)\n        {\n          audioSamples[2].currentTime = 0;\n          audioSamples[2].play();\n        }\n\n        if(grid[3][currentStepRef.current-1] && audioSamples[3] !== null)\n        {\n          audioSamples[3].currentTime = 0;\n          audioSamples[3].play();\n        }\n\n        if(grid[4][currentStepRef.current-1] && audioSamples[4] !== null)\n        {\n          audioSamples[4].currentTime = 0;\n          audioSamples[4].play();\n        }\n\n        if(grid[5][currentStepRef.current-1] && audioSamples[5] !== null)\n        {\n          audioSamples[5].currentTime = 0;\n          audioSamples[5].play();\n        }\n\n      };\n    }\n\n    return () => {\n      clearTimeout(timerRef.current);\n    };\n    \n  },[bpm,grid]);\n\n  \n  useEffect(() => {\n\n    if(grid !== null)\n    {\n      setGridInitComplete(true);\n    }\n  },[grid]);\n\n  useEffect(() => {\n    \n    if(audioSamples !== null)\n    {\n      setAudioInitComplete(true);\n    }\n  },[audioSamples]);\n\n  useEffect(() => {\n    \n    if(audioSampleNames !== null)\n    {\n      setAudioNamesInitComplete(true);\n    }\n  },[audioSampleNames]);\n\n  useEffect(() => {\n\n    if(gridInitComplete && audioNamesInitComplete && audioInitComplete)\n    {\n      setInitComplete(true);\n      socket.emit('joining-room',roomId);\n    }\n\n  },[gridInitComplete, audioNamesInitComplete, audioInitComplete]);\n\n  useEffect(() => {\n    \n    setBPM(bpmRef.current);\n  },[initComplete]);\n\n  return (\n    <div className=\"Room\">\n      <div id=\"room-title-container\">\n        <div id=\"room-title\" onClick={\n          ()=>{\n            history.push(\"/home\");\n            props.setDisplayRooms(false);\n          }\n          }>Collab Drums\n        </div>\n      </div>\n      <div id=\"main-container\">\n        <div id=\"message-container\"></div>\n          \n        </div>\n\n        <div id=\"drum-grid\">\n          <div id=\"control-panel\">\n            <img className=\"control-btn\" src={play_svg} alt=\"play button\"></img>\n            <img className=\"control-btn\" src={pause_svg} alt=\"pause button\"></img>\n            <img className=\"control-btn\" src={trash_svg} alt=\"trash button\"></img>\n            <input type=\"number\" id=\"bpm\" min=\"40\" max=\"208\" value={bpm !== null ? bpm : \"\"} onChange={(e)=>bpmChange(e, e.target.value)}/>\n          </div>\n\n          {\n            gridInitComplete ? \n            grid.map((track,trackNum)=>{\n              return (\n                <div className=\"instrument\" id={\"instrument-\"+trackNum} key={uniqid()}>\n                  {\n                    toggleAudioIcon[trackNum] ? <div className=\"add-sample\" id={\"add-sample-\"+trackNum} onClick={()=>toggleSampleIcon(trackNum)}>\n                      <img className=\"sample-icon\" src={vinyl_svg} alt=\"sample button\"></img>\n                      { audioNamesInitComplete ? <div id={\"add-sample-descrip-\"+trackNum} className=\"add-sample-descrip\">{audioSampleNames[trackNum] === null ? \"Add Sample\" : audioSampleNames[trackNum]}</div> : null }\n                    </div> : \n                    <input type=\"file\" className=\"file-input\" accept=\".wav,.mp3\" onChange={(e)=>loadSample(e,trackNum)}/>\n                  }\n\n                  {\n                    track.map((box,index) => {\n\n                      let classList = [\"drum-box\"];\n\n                      if(box)\n                      {\n                        classList.push(\"clicked\");\n                      }\n\n                      if((index+1) % 4 === 1)\n                      {\n                        classList.push(\"first\");\n                      }\n                      else if((index+1) % 4 === 0)\n                      {\n                        classList.push(\"fourth\")\n                      }\n\n                      classList.push('step-'+(index+1));\n\n                      return (\n                        <div className={classList.join(\" \")} onClick={()=>gridBoxClicked(trackNum,index)} key={uniqid()}></div>\n                      )\n                    })\n                  }\n\n                </div>\n              )\n            }) : null\n          }\n          {\n            roomURL !== null ? \n            <div id=\"bottom-container\">\n              <div id=\"copy-link-container\">\n                <div id=\"copy-link-text\">Copy link</div> \n                <div id=\"copy-link-window\" onClick={copyText}>{roomURL}</div>\n              </div> \n            </div> : null\n          }\n\n        </div>\n      \n    </div>\n  );\n}\n\nexport default Room;\n\n/*<form id=\"send-container\">\n            <input type=\"text\" id=\"message-input\"/>\n            <button type=\"submit\" id=\"send-button\">Send</button>\n          </form>\n\n          <form action=\"/update-audio-settings\" method=\"post\" encType=\"multipart/form-data\">\n                      <input type=\"file\" name=\"audio\" className=\"file-input\" accept=\".wav,.mp3\"/>\n                    </form>\n\n          <input type=\"file\" className=\"file-input\" accept=\".wav,.mp3\" onChange={(e)=>loadSample(e,trackNum)}/>\n*/\n","import '../App.css';\nimport history from '../history.js';\n\n\n\n\nfunction NotValidRoom(props) {\n\n  return (\n\n    <div className=\"NotValidRoom\">\n      <div id=\"room-title-container\">\n        <div id=\"room-title\" onClick={()=>history.push(\"/home\")}>Collab Drums</div>\n        </div>\n      <div id=\"error-container\">\n        <div id=\"error-msg\">Not a valid room</div> \n      </div>\n    </div> \n  );\n}\n\n\nexport default NotValidRoom;","import '../App.css';\nimport {useState,useEffect} from \"react\";\n\nimport Room from \"./Room.js\";\nimport NotValidRoom from \"./NotValidRoom.js\";\n\n\n\n\nfunction ProtectedComponent(props) {\n\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(()=>{\n\n    async function checkIfValid () {\n      let result = await props.checkIfValidRoom(props.match.params.id);\n      setIsValid(result);\n    };\n\n    checkIfValid();\n    \n  },[]);\n\n  return (\n\n    <div className=\"ProtectedComponent\">\n      {\n        isValid ? <Room roomId={props.match.params.id} setDisplayRooms={props.setDisplayRooms}/> : <NotValidRoom/>\n      }\n    </div> \n  );\n}\n\n\nexport default ProtectedComponent;\n//<Redirect push to= {props.redirect}/>","import './App.css';\nimport {useState,useEffect} from \"react\";\nimport uniqid from \"uniqid\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from './history.js';\n\nimport ProtectedComponent from \"./components/ProtectedComponent.js\";\n\n\nfunction App() {\n\n  const [displayRooms, setDisplayRooms] = useState(false);\n  const [roomList, setRoomList] = useState([]);\n\n\n  const toggleDisplayRooms = () => {\n    setDisplayRooms(true);\n  };\n\n  const checkIfValidRoom = async (roomId) => {\n    try {\n        let response = await fetch('http://localhost:8080/room/'+roomId);\n        response = await response.json();\n        return response.isValid;\n    }\n    catch(e){\n      console.error(e);\n      return false;\n    }\n  };\n\n  const createPublicRoom = async () => {\n    try {\n        let response = await fetch('http://localhost:8080/create-public-room',{\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n\n        });\n        response = await response.json();\n        history.push(\"/room/\"+response.roomId);\n    \n    }\n    catch(e){\n      console.error(e);\n    }\n  };\n\n  const createPrivateRoom = async () => {\n    try {\n        let response = await fetch('http://localhost:8080/create-private-room',{\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n\n        });\n        response = await response.json();\n        history.push(\"/room/\"+response.roomId);\n    \n    }\n    catch(e){\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n\n    (async () => {\n      \n      try{\n        let response = await fetch('http://localhost:8080/display-public-rooms');\n        response = await response.json();\n        setRoomList(response.rooms);\n\n      }\n      catch(e){\n        console.error(e);\n      }\n    })();\n\n  },[displayRooms]);\n\n\n\n\n  return (\n    <div className=\"App\">\n      \n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/home\">\n              <div id=\"main-container-title\">\n                <div id=\"title\" onClick={\n                  ()=>\n                  {\n                    history.push(\"/home\");\n                    setDisplayRooms(false);\n                  } \n\n                }>Collab Drums</div>\n              </div>\n              <div id = \"home-page-options\">\n              {\n                displayRooms ? <div id=\"public-room-container\">\n                    {\n                      roomList.map(function(room){\n                        return (\n                          <div className=\"roomList-container\">\n                            <div className=\"roomList\" key={uniqid()} onClick={()=>history.push(\"/room/\"+room.roomId)}>Join {room.roomId}</div>\n                          </div>\n                          )\n                      })\n                    }\n                </div> : \n\n                <div>\n                  <div id=\"join-public-room\">\n                    <button className=\"main-btn\" onClick={toggleDisplayRooms}>Join Public Room</button>\n                  </div>\n                  <div id=\"create-public-room\">\n                    <button className=\"main-btn\" onClick={createPublicRoom}>Create Public Room</button>\n                  </div>\n                  <div id=\"create-private-room\">\n                    <button className=\"main-btn\" onClick={createPrivateRoom}>Create Private Room</button>\n                  </div>\n                </div>  \n              }\n              </div>\n          </Route>\n\n          <Route path=\"/room/:id\" render={(props) => \n              <ProtectedComponent\n                checkIfValidRoom={checkIfValidRoom}\n                redirect='/home'\n                history={history}\n                setDisplayRooms={setDisplayRooms}\n                {...props}\n              />\n          } />\n\n        \n        </Switch>\n      </Router>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}